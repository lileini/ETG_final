//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : EasyToTravel
//  @ File Name : LoginBiz.java
//  @ Date : 2015/10/12
//  @ Author : 
//
//



package com.lxl.travel.biz;

import java.sql.Date;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.content.Intent;

import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lxl.travel.entity.UserEntity;
import com.lxl.travel.utils.Const;


public class LoginBiz {
	private Context context;
	public LoginBiz(Context context){
		this.context = context;
	}
	
	public void login(String username, String md5password){
		HttpUtils httpUtils = new HttpUtils(10000);
		String url = Const.GLOB_URL + "login";
		RequestParams params = new RequestParams();
		params.addBodyParameter("username", username);
		params.addBodyParameter("md5password", md5password);		
		httpUtils.send(HttpMethod.POST, url, params, new RequestCallBack<String>() {

			@Override
			public void onFailure(HttpException arg0, String arg1) {
				Intent intent = new Intent(Const.ACTION_LOGIN);
				intent.putExtra(Const.KEY_DATA, Const.CONNECTION_OUT_TIME);
				context.sendBroadcast(intent);
			}

			@Override
			public void onSuccess(ResponseInfo<String> responseInfo) {
				String result = responseInfo.result;
				int status = -1;
				String msg = null;
				try {
					JSONObject data = new JSONObject(result);
					String res = data.getString("result");
					String json = data.getString(Const.KEY_DATA);
					if ("ok".equals(res)){
						//��֤�ɹ�
						status = Const.STATUS_LOGIN_SUCCESS;
						UserEntity entity = parseJSON(json);
						if (entity == null){
							status = -1;
						}
						Intent intent = new Intent(Const.ACTION_LOGIN);
						intent.putExtra(Const.KEY_DATA, status);
						intent.putExtra("entity", entity);
						context.sendBroadcast(intent);
						return;
					}else if ("err".equals(res)){
						//��֤ʧ��
						status = Const.STATUS_LOGIN_FAIL;
						msg = json;
					}
				} catch (JSONException e) {
					e.printStackTrace();
					status = -1;
				}finally{
					Intent intent = new Intent(Const.ACTION_LOGIN);
					intent.putExtra(Const.KEY_DATA, status);
					intent.putExtra("msg", msg);
					context.sendBroadcast(intent);
				}
			}
		});
	}

	private UserEntity parseJSON(String json) {
		UserEntity entity = new UserEntity();
		try {
			JSONArray array = new JSONArray(json);
			JSONObject object = (JSONObject) array.get(0);
			entity.setGender(object.getString("gender"));
			entity.setLastLoginTime(Date.valueOf(object.getString("lastLoginTime")));
			entity.setMd5password(object.getString("md5password"));
			entity.setNickname(object.getString("nickname"));
			entity.setRegTime(Date.valueOf(object.getString("regTime")));
			entity.setUsername(object.getString("username"));
			return entity;
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return null;
	}
	
}
